/** @type {import('tailwindcss').Config} */
export default {
    content: [
        "./index.html",
        "./src/**/*.{js,ts,jsx,tsx}",
    ],
    darkMode: ['class', '[data-theme="dark"]'],
    theme: {
        extend: {
            colors: {
                // Use CSS variables for runtime theming with opacity support
                westworld: {
                    cream: 'rgb(var(--color-westworld-cream) / <alpha-value>)',
                    beige: 'rgb(var(--color-westworld-beige) / <alpha-value>)',
                    tan: 'rgb(var(--color-westworld-tan) / <alpha-value>)',
                    brown: 'rgb(var(--color-westworld-brown) / <alpha-value>)',
                    darkBrown: 'rgb(var(--color-westworld-dark-brown) / <alpha-value>)',
                    nearBlack: 'rgb(var(--color-westworld-near-black) / <alpha-value>)',
                    black: 'rgb(var(--color-westworld-black) / <alpha-value>)',
                    gold: 'rgb(var(--color-westworld-gold) / <alpha-value>)',
                    darkGold: 'rgb(var(--color-westworld-dark-gold) / <alpha-value>)',
                    rust: 'rgb(var(--color-westworld-rust) / <alpha-value>)',
                    copper: 'rgb(var(--color-westworld-copper) / <alpha-value>)',
                    darkCopper: 'rgb(var(--color-westworld-dark-copper) / <alpha-value>)',
                    white: 'rgb(var(--color-westworld-white) / <alpha-value>)',
                },
                // Semantic colors with opacity support
                primary: 'rgb(var(--color-primary) / <alpha-value>)',
                'primary-dark': 'rgb(var(--color-primary-dark) / <alpha-value>)',
                secondary: 'rgb(var(--color-secondary) / <alpha-value>)',
                'secondary-dark': 'rgb(var(--color-secondary-dark) / <alpha-value>)',
                background: 'rgb(var(--color-background) / <alpha-value>)',
                surface: 'rgb(var(--color-surface) / <alpha-value>)',
                text: 'rgb(var(--color-text) / <alpha-value>)',
                'text-muted': 'rgb(var(--color-text-muted) / <alpha-value>)',
                border: 'rgb(var(--color-border) / <alpha-value>)',
                // Paradigm accent color
                'paradigm-accent': 'rgb(var(--paradigm-accent) / <alpha-value>)',
                // State colors with opacity support
                success: 'rgb(var(--color-success) / <alpha-value>)',
                'success-light': 'rgb(var(--color-success-light) / <alpha-value>)',
                warning: 'rgb(var(--color-warning) / <alpha-value>)',
                'warning-light': 'rgb(var(--color-warning-light) / <alpha-value>)',
                error: 'rgb(var(--color-error) / <alpha-value>)',
                'error-light': 'rgb(var(--color-error-light) / <alpha-value>)',
                info: 'rgb(var(--color-info) / <alpha-value>)',
                'info-light': 'rgb(var(--color-info-light) / <alpha-value>)',
                // Paradigm-specific colors
                dolores: {
                    50: 'rgb(var(--color-dolores-50) / <alpha-value>)',
                    100: 'rgb(var(--color-dolores-100) / <alpha-value>)',
                    200: 'rgb(var(--color-dolores-200) / <alpha-value>)',
                    300: 'rgb(var(--color-dolores-300) / <alpha-value>)',
                    400: 'rgb(var(--color-dolores-400) / <alpha-value>)',
                    500: 'rgb(var(--color-dolores-500) / <alpha-value>)',
                    600: 'rgb(var(--color-dolores-600) / <alpha-value>)',
                    700: 'rgb(var(--color-dolores-700) / <alpha-value>)',
                    800: 'rgb(var(--color-dolores-800) / <alpha-value>)',
                    900: 'rgb(var(--color-dolores-900) / <alpha-value>)',
                },
                teddy: {
                    50: 'rgb(var(--color-teddy-50) / <alpha-value>)',
                    100: 'rgb(var(--color-teddy-100) / <alpha-value>)',
                    200: 'rgb(var(--color-teddy-200) / <alpha-value>)',
                    300: 'rgb(var(--color-teddy-300) / <alpha-value>)',
                    400: 'rgb(var(--color-teddy-400) / <alpha-value>)',
                    500: 'rgb(var(--color-teddy-500) / <alpha-value>)',
                    600: 'rgb(var(--color-teddy-600) / <alpha-value>)',
                    700: 'rgb(var(--color-teddy-700) / <alpha-value>)',
                    800: 'rgb(var(--color-teddy-800) / <alpha-value>)',
                    900: 'rgb(var(--color-teddy-900) / <alpha-value>)',
                },
                bernard: {
                    50: 'rgb(var(--color-bernard-50) / <alpha-value>)',
                    100: 'rgb(var(--color-bernard-100) / <alpha-value>)',
                    200: 'rgb(var(--color-bernard-200) / <alpha-value>)',
                    300: 'rgb(var(--color-bernard-300) / <alpha-value>)',
                    400: 'rgb(var(--color-bernard-400) / <alpha-value>)',
                    500: 'rgb(var(--color-bernard-500) / <alpha-value>)',
                    600: 'rgb(var(--color-bernard-600) / <alpha-value>)',
                    700: 'rgb(var(--color-bernard-700) / <alpha-value>)',
                    800: 'rgb(var(--color-bernard-800) / <alpha-value>)',
                    900: 'rgb(var(--color-bernard-900) / <alpha-value>)',
                },
                maeve: {
                    50: 'rgb(var(--color-maeve-50) / <alpha-value>)',
                    100: 'rgb(var(--color-maeve-100) / <alpha-value>)',
                    200: 'rgb(var(--color-maeve-200) / <alpha-value>)',
                    300: 'rgb(var(--color-maeve-300) / <alpha-value>)',
                    400: 'rgb(var(--color-maeve-400) / <alpha-value>)',
                    500: 'rgb(var(--color-maeve-500) / <alpha-value>)',
                    600: 'rgb(var(--color-maeve-600) / <alpha-value>)',
                    700: 'rgb(var(--color-maeve-700) / <alpha-value>)',
                    800: 'rgb(var(--color-maeve-800) / <alpha-value>)',
                    900: 'rgb(var(--color-maeve-900) / <alpha-value>)',
                },
            },
            spacing: {
                0: 'var(--spacing-0)',
                1: 'var(--spacing-1)',
                2: 'var(--spacing-2)',
                3: 'var(--spacing-3)',
                4: 'var(--spacing-4)',
                5: 'var(--spacing-5)',
                6: 'var(--spacing-6)',
                8: 'var(--spacing-8)',
                10: 'var(--spacing-10)',
                12: 'var(--spacing-12)',
                16: 'var(--spacing-16)',
                20: 'var(--spacing-20)',
                24: 'var(--spacing-24)',
            },
            borderRadius: {
                none: 'var(--border-radius-none)',
                sm: 'var(--border-radius-sm)',
                DEFAULT: 'var(--border-radius-base)',
                md: 'var(--border-radius-md)',
                lg: 'var(--border-radius-lg)',
                xl: 'var(--border-radius-xl)',
                '2xl': 'var(--border-radius-2xl)',
                '3xl': 'var(--border-radius-3xl)',
                full: 'var(--border-radius-full)',
            },
            boxShadow: {
                none: 'var(--shadows-none)',
                sm: 'var(--shadows-sm)',
                DEFAULT: 'var(--shadows-base)',
                md: 'var(--shadows-md)',
                lg: 'var(--shadows-lg)',
                xl: 'var(--shadows-xl)',
                '2xl': 'var(--shadows-2xl)',
                inner: 'var(--shadows-inner)',
                'westworld-glow': 'var(--shadows-glow)',
                'westworld-glow-lg': 'var(--shadows-glow-lg)',
            },
            animation: {
                shimmer: 'shimmer 2s ease-in-out infinite',
                'pulse-soft': 'pulse-soft 2s ease-in-out infinite',
                glow: 'glow 2s ease-in-out infinite',
            },
            keyframes: {
                shimmer: {
                    '0%': { backgroundPosition: '-200% 0' },
                    '100%': { backgroundPosition: '200% 0' }
                },
                'pulse-soft': {
                    '0%, 100%': { opacity: '1' },
                    '50%': { opacity: '0.8' }
                },
                glow: {
                    '0%, 100%': {
                        boxShadow: '0 0 5px var(--animation-color, theme("colors.westworld.gold")), 0 0 10px var(--animation-color, theme("colors.westworld.gold"))',
                    },
                    '50%': {
                        boxShadow: '0 0 10px var(--animation-color, theme("colors.westworld.gold")), 0 0 20px var(--animation-color, theme("colors.westworld.gold")), 0 0 30px var(--animation-color, theme("colors.westworld.gold"))',
                    },
                },
            },
        },
    },
    safelist: [
        // For ParadigmIndicator dynamic colors
        'bg-dolores-50', 'border-dolores-200', 'text-dolores-700',
        'bg-teddy-50', 'border-teddy-200', 'text-teddy-700',
        'bg-bernard-50', 'border-bernard-200', 'text-bernard-700',
        'bg-maeve-50', 'border-maeve-200', 'text-maeve-700',
        // For Controls gradient colors
        'from-dolores-500', 'to-dolores-600',
        'from-teddy-500', 'to-teddy-600',
        'from-bernard-500', 'to-bernard-600',
        'from-maeve-500', 'to-maeve-600',
    ],
    plugins: [],
}
